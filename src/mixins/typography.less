/*
 * Font size
**/
.tw-font-size(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'text-@{selector}', font-size, @value, @hover, @focus, @screens);
}

/*
 * Font style
**/
.tw-font-style(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'@{selector}', font-style, @value, @hover, @focus, @screens);
}

/*
 * Font weight
**/
.tw-font-weight(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'font-@{selector}', font-weight, @value, @hover, @focus, @screens);
}

/*
 * Letter sapcing
**/
.tw-letter-spacing(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'tracking-@{selector}', letter-spacing, @value, @hover, @focus, @screens);
}

/*
 * Line height
**/
.tw-line-height(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'leading-@{selector}', line-height, @value, @hover, @focus, @screens);
}

/*
 * List style type
**/
.tw-list-style-type(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'list-@{selector}', list-style-type, @value, @hover, @focus, @screens);
}

/*
 * List style position
**/
.tw-list-style-position(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'list-@{selector}', list-style-position, @value, @hover, @focus, @screens);
}

/*
 * Text align
**/
.tw-text-align(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'text-@{selector}', text-align, @value, @hover, @focus, @screens);
}

/*
 * Text color
**/
.tw-text-color(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'text-@{selector}', color, @value, @hover, @focus, @screens);
}

/*
 * Text decoration
**/
.tw-text-decoration(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'@{selector}', text-decoration, @value, @hover, @focus, @screens);
}

/*
 * Text transform
**/
.tw-text-transform(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'@{selector}', text-transform, @value, @hover, @focus, @screens);
}

/*
 * Text overflow
**/
.tw-text-overflow(@selector, @value, @hover: false, @focus: false, @screens: false) when not (isnumber(@selector)) {
  .tw-mixins(~'overflow-@{selector}', text-transform, @value, @hover, @focus, @screens);
}
.tw-text-overflow(@selector, @value, @hover: false, @focus: false, @screens: false) when (@selector <= 1) {
  .tw-mixins(~'truncate-@{selector}', overflow, ~'hidden !important', @hover, @focus, @screens);
  .tw-mixins(~'truncate-@{selector}', text-overflow, ellipsis, @hover, @focus, @screens);
  .tw-mixins(~'truncate-@{selector}', white-space, nowrap, @hover, @focus, @screens);
}
.tw-text-overflow(@selector, @value, @hover: false, @focus: false, @screens: false) when (@selector > 1) {
  .tw-mixins(~'truncate-@{selector}', display, -webkit-box, @hover, @focus, @screens);
  .tw-mixins(~'truncate-@{selector}', -webkit-box-orient, vertical, @hover, @focus, @screens);
  .tw-mixins(~'truncate-@{selector}', overflow, ~'hidden !important', @hover, @focus, @screens);
  .tw-mixins(~'truncate-@{selector}', -webkit-line-clamp, @value, @hover, @focus, @screens);
  .tw-mixins(~'truncate-@{selector}', height, (@line-height-default * @value * 1em), @hover, @focus, @screens);
}

/*
 * Vertical align
**/
.tw-vertical-align(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'align-@{selector}', vertical-align, @value, @hover, @focus, @screens);
}

/*
 * White space
**/
.tw-white-space(@selector, @value, @hover: false, @focus: false, @screens: false) {
  .tw-mixins(~'whitespace-@{selector}', white-space, @value, @hover, @focus, @screens);
}

/*
 * Word break
**/
.tw-word-break(@selector, @value, @hover: false, @focus: false, @screens: false) when not (@selector = words) {
  .tw-mixins(~'break-@{selector}', word-break, @value, @hover, @focus, @screens);
}
.tw-word-break(@selector, @value, @hover: false, @focus: false, @screens: false) when (@selector = normal) {
  .tw-mixins(~'break-@{selector}', overflow-wrap, @value, @hover, @focus, @screens);
}
.tw-word-break(@selector, @value, @hover: false, @focus: false, @screens: false) when (@selector = words) {
  .tw-mixins(~'break-@{selector}', overflow-wrap, @value, @hover, @focus, @screens);
}
