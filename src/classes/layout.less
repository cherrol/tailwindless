/*
 * Box sizing
**/
.tw-box-sizing(border, border-box);
.tw-box-sizing(content, content-box);

/*
 * Display
**/
.tw-display(hidden, none);
.tw-display(display-block, block);
.tw-display(inline, inline);
.tw-display(inline-block, inline-block);
.tw-display(flex, flex);
.tw-display(inline-flex, inline-flex);
.tw-display(table, table);
.tw-display(inline-table, inline-table);
@media (min-width: @screen-sm) {
  @screens: ~'sm';
  .tw-display(hidden, none, @screens: @screens);
  .tw-display(display-block, block, @screens: @screens);
  .tw-display(inline, inline, @screens: @screens);
  .tw-display(inline-block, inline-block, @screens: @screens);
  .tw-display(flex, flex, @screens: @screens);
  .tw-display(inline-flex, inline-flex, @screens: @screens);
  .tw-display(table, table, @screens: @screens);
  .tw-display(inline-table, inline-table, @screens: @screens);
}
@media (min-width: @screen-md) {
  @screens: ~'md';
  .tw-display(hidden, none, @screens: @screens);
  .tw-display(display-block, block, @screens: @screens);
  .tw-display(inline, inline, @screens: @screens);
  .tw-display(inline-block, inline-block, @screens: @screens);
  .tw-display(flex, flex, @screens: @screens);
  .tw-display(inline-flex, inline-flex, @screens: @screens);
  .tw-display(table, table, @screens: @screens);
  .tw-display(inline-table, inline-table, @screens: @screens);
}
@media (min-width: @screen-lg) {
  @screens: ~'lg';
  .tw-display(hidden, none, @screens: @screens);
  .tw-display(display-block, block, @screens: @screens);
  .tw-display(inline, inline, @screens: @screens);
  .tw-display(inline-block, inline-block, @screens: @screens);
  .tw-display(flex, flex, @screens: @screens);
  .tw-display(inline-flex, inline-flex, @screens: @screens);
  .tw-display(table, table, @screens: @screens);
  .tw-display(inline-table, inline-table, @screens: @screens);
}
@media (min-width: @screen-xl) {
  @screens: ~'xl';
  .tw-display(hidden, none, @screens: @screens);
  .tw-display(display-block, block, @screens: @screens);
  .tw-display(inline, inline, @screens: @screens);
  .tw-display(inline-block, inline-block, @screens: @screens);
  .tw-display(flex, flex, @screens: @screens);
  .tw-display(inline-flex, inline-flex, @screens: @screens);
  .tw-display(table, table, @screens: @screens);
  .tw-display(inline-table, inline-table, @screens: @screens);
}

/*
 * Float
**/
.tw-float(left, left);
.tw-float(right, right);
.tw-float(none, none);

/*
 * Clear
**/
.tw-clear(left, left);
.tw-clear(right, right);
.tw-clear(both, both);
.tw-clear(none, none);

/*
 * Object fit
**/
.tw-object-fit(contain, contain);
.tw-object-fit(cover, cover);
.tw-object-fit(fill, fill);
.tw-object-fit(none, none);
.tw-object-fit(scale-down, scale-down);

/*
 * Object position
**/
.tw-object-position(bottom, bottom);
.tw-object-position(center, center);
.tw-object-position(left, left);
.tw-object-position(right, right);
.tw-object-position(top, top);
.tw-object-position(left-bottom, ~'left bottom');
.tw-object-position(left-top, ~'left top');
.tw-object-position(right-bottom, ~'right bottom');
.tw-object-position(right-top, ~'right top');

/*
 * overflow
**/
.tw-overflow(auto, auto);
.tw-overflow(hidden, hidden, @important: true);
.tw-overflow(scroll, scroll);
.tw-overflow(visible, visible);

/*
 * Position
**/
.tw-position(static, static);
.tw-position(fixed, fixed);
.tw-position(absolute, absolute);
.tw-position(relative, relative);
.tw-position(sticky, sticky);
@media (min-width: @screen-sm) {
  @screens: ~'sm';
  .tw-position(static, static, @screens: @screens);
  .tw-position(fixed, fixed, @screens: @screens);
  .tw-position(absolute, absolute, @screens: @screens);
  .tw-position(relative, relative, @screens: @screens);
  .tw-position(sticky, sticky, @screens: @screens);
}
@media (min-width: @screen-md) {
  @screens: ~'md';
  .tw-position(static, static, @screens: @screens);
  .tw-position(fixed, fixed, @screens: @screens);
  .tw-position(absolute, absolute, @screens: @screens);
  .tw-position(relative, relative, @screens: @screens);
  .tw-position(sticky, sticky, @screens: @screens);
}
@media (min-width: @screen-lg) {
  @screens: ~'lg';
  .tw-position(static, static, @screens: @screens);
  .tw-position(fixed, fixed, @screens: @screens);
  .tw-position(absolute, absolute, @screens: @screens);
  .tw-position(relative, relative, @screens: @screens);
  .tw-position(sticky, sticky, @screens: @screens);
}
@media (min-width: @screen-xl) {
  @screens: ~'xl';
  .tw-position(static, static, @screens: @screens);
  .tw-position(fixed, fixed, @screens: @screens);
  .tw-position(absolute, absolute, @screens: @screens);
  .tw-position(relative, relative, @screens: @screens);
  .tw-position(sticky, sticky, @screens: @screens);
}

/*
 * Position inset
**/
.tw-position-inset(0, 0px);
.tw-position-inset(auto, auto);
.tw-position-inset(~"1\/2", 50%, @minus: true);
.tw-position-inset(full, 100%, @minus: true);
@media (min-width: @screen-sm) {
  @screens: ~'sm';
  .tw-position-inset(0, 0px, @screens: @screens);
  .tw-position-inset(auto, auto, @screens: @screens);
  .tw-position-inset(~"1\/2", 50%, @minus: true, @screens: @screens);
  .tw-position-inset(full, 100%, @minus: true, @screens: @screens);
}
@media (min-width: @screen-md) {
  @screens: ~'md';
  .tw-position-inset(0, 0px, @screens: @screens);
  .tw-position-inset(auto, auto, @screens: @screens);
  .tw-position-inset(~"1\/2", 50%, @minus: true, @screens: @screens);
  .tw-position-inset(full, 100%, @minus: true, @screens: @screens);
}
@media (min-width: @screen-lg) {
  @screens: ~'lg';
  .tw-position-inset(0, 0px, @screens: @screens);
  .tw-position-inset(auto, auto, @screens: @screens);
  .tw-position-inset(~"1\/2", 50%, @minus: true, @screens: @screens);
  .tw-position-inset(full, 100%, @minus: true, @screens: @screens);
}
@media (min-width: @screen-xl) {
  @screens: ~'xl';
  .tw-position-inset(0, 0px, @screens: @screens);
  .tw-position-inset(auto, auto, @screens: @screens);
  .tw-position-inset(~"1\/2", 50%, @minus: true, @screens: @screens);
  .tw-position-inset(full, 100%, @minus: true, @screens: @screens);
}

/*
 * Visibility
**/
.tw-visibility(visible, visible);
.tw-visibility(invisible, hidden);


.tw-z-index(0, 0, @hover: true);
.tw-z-index(1, 1, @hover: true, @minus: true);
.tw-z-index(2, 2, @hover: true);
.tw-z-index(3, 3, @hover: true);
.tw-z-index(4, 4, @hover: true);
.tw-z-index(5, 5, @hover: true);
.tw-z-index(6, 6, @hover: true);
.tw-z-index(7, 7, @hover: true);
.tw-z-index(8, 8, @hover: true);
.tw-z-index(9, 9, @hover: true);
.tw-z-index(10, 10, @hover: true);
.tw-z-index(100, 100, @hover: true);
.tw-z-index(auto, auto, @hover: true);

